//Jiwhan Son, Karime Saad
//js78978, ks38728
//EE422C - Assignment 3

/*
 * Model for item class. Holds item attributes and calculates total cost of item.
 * 
 * @author	Jiwhan Son, Karime Saad
 */

package Assignment3;

public class Item 
{
	protected String name;
	protected float price;
	protected int quantity;
	protected int weight;
	
	/*
	 * Creates an item with initial parameters
	 * 
	 * @param	name		name of item
	 * @param	price		price of item
	 * @param	quantity	quantity of item
	 * @param	weight		weight of the item
	 */
	public Item(String name, float price, int quantity, int weight) {
		if(price < 0 || quantity < 0 || weight < 0) {
			throw new IllegalArgumentException();
		}
			this.name = name;
			this.price = price;
			this.quantity = quantity;
			this.weight = weight;
		}
	
	/*
	 * @return	name	name of item
	 */
	public String getName() {
		return name;
	}

	/*
	 * @return	quantity	quantity of item
	 */
	public int getQuantity() {
		return quantity;
	}

	/*
	 * Updates the quantity of the item
	 * 
	 * @param	quantity	new quantity of item
	 */
	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}

	/*
	 * @return	final_price	calculates the price of item w/o tax or shipping
	 */
	float calculatePrice () 
	{
		float final_price = quantity * price;
		return final_price;
	}
	
	float standardShipping(){
		return (20 * weight * quantity);
	}
	
	float premiumShipping(){
		return (float) (standardShipping() * 1.2) ;
	}

	float calculateTax (){
		return (float) (price * quantity * .1);
	}
	
	void printItemAttributes () 
	{
		System.out.println("Name: " + name);
		System.out.println("Price: " + price);
		System.out.println("Quantity: " + quantity);
		System.out.println("Weight: " + weight);
		System.out.println("Total charge: " + calculatePrice());
		
	}


}
